apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: user016-l2o-train # executable id, must be unique across all your workflows (YAML files)
  annotations:
    scenarios.ai.sap.com/description: "user016: Learning how to ingest data to workflows"
    scenarios.ai.sap.com/name: "user016: Lead 2 Order Scenario" # Scenario name should be the use case
    executables.ai.sap.com/description: "user016: Train with live data"
    executables.ai.sap.com/name: "user016: Lead 2 Order Training Executable" # Executable name should describe the workflow in the use case
    artifacts.ai.sap.com/l2odataset.kind: "dataset" # Helps in suggesting the kind of inputs that can be attached.
    artifacts.ai.sap.com/l2omodel.kind: "model" # Helps in suggesting the kind of artifact that can be generated.
  labels:
    scenarios.ai.sap.com/id: "user016-l2o-learning"
    ai.sap.com/version: "1.0"
spec:
  imagePullSecrets:
    - name: user016-dockercred # your docker registry secret
  entrypoint: mypipeline
  templates:
  - name: mypipeline
    steps:
    - - name: mypredictor
        template: mycodeblock1
  - name: mycodeblock1
    inputs:
      artifacts:  # placeholder for cloud storage attachements
        - name: l2odataset # a name for the placeholder
          path: /app/data/ # where to copy in the Dataset in the Docker image
    outputs:
      artifacts:
        - name: l2omodel # name of the artifact generated, and folder name when placed in S3, complete directory will be `../<executaion_id>/l2omodel`
          globalName: user016-l2o-model # local identifier name to the workflow, also used above in annotation
          path: /app/model/ # from which folder in docker image (after running workflow step) copy contents to cloud storage
          archive:
            none:   # specify not to compress while uploading to cloud
              {}
    container:
      image: docker.io/tantaju/l2o-train:01 # Your docker image name
      command: ["/bin/sh", "-c"]
      args:
        - "python /app/src/main.py"
